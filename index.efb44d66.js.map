{"mappings":"AAagBA,OAAMC,IACpB,MACMC,EAAQ,8CAAuBD,IAE/BE,QAAiBC,MAHV,gEAGuBF,GAEpC,aADmBC,EAASE,QAChB,EAAE,EAGhBC,CAAQ,YACLC,MAAKC,GApBWR,OAAMS,IACvB,MACMP,EAAQ,GAAGO,4CAEXN,QAAiBC,MAHV,2DAGuBF,GAEpC,aADmBC,EAASE,QAChB,EAAE,EAeLK,CAAWF,EAAKG,OAExBJ,MAAKC,IACJI,QAAQC,IAAIL,EAAK,IAElBM,OAAMC,GAAOH,QAAQC,IAAIE","sources":["src/scripts/forecast.js"],"sourcesContent":["const apiKey = 'S7G2LbP0Y0yEFG1MikAzostUxeEZK6Pl';\n\n//TODO get weather information:\nconst getWeather = async cityKey => {\n  const base = 'http://dataservice.accuweather.com/currentconditions/v1/';\n  const query = `${cityKey}?apikey=${apiKey}`;\n\n  const response = await fetch(base + query);\n  const data = await response.json();\n  return data[0];\n};\n\n// TODO get city information:\nconst getCity = async city => {\n  const base = 'http://dataservice.accuweather.com/locations/v1/cities/search';\n  const query = `?apikey=${apiKey}&q=${city}`;\n\n  const response = await fetch(base + query);\n  const data = await response.json();\n  return data[0];\n};\n\ngetCity('Bistrita')\n  .then(data => {\n    return getWeather(data.Key);\n  })\n  .then(data => {\n    console.log(data);\n  })\n  .catch(err => console.log(err));\n"],"names":["async","city","query","response","fetch","json","$5ea804303c277ab2$var$getCity","then","data","cityKey","$5ea804303c277ab2$var$getWeather","Key","console","log","catch","err"],"version":3,"file":"index.efb44d66.js.map"}