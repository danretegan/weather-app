{"mappings":"A,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCEA,MAAM,EAAW,SAAS,aAAa,CAAC,QAClC,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAU,SAAS,aAAa,CAAC,YACjC,EAAO,SAAS,aAAa,CAAC,YAC9B,EAAO,SAAS,aAAa,CAAC,aAE9B,EAAW,AAAA,IAEf,GAAM,CAAA,YAAE,CAAW,CAAA,QAAE,CAAO,CAAE,CAAG,EACjC,QAAQ,GAAG,CAAC,GAGZ,EAAQ,SAAS,CAAG,CAAC;mBACJ,EAAE,EAAY,aAAa,CAAC;MACzC,EAAE,EAAY,kBAAkB,CAAC,aAAa,CAAC;oBACjC,EAAE,EAAQ,WAAW,CAAC;;UAEhC,EAAE,EAAQ,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;;;EAG3C,CAAC,CAGD,IAAM,EAAU,CAAC,aAAa,EAAE,EAAQ,WAAW,CAAC,IAAI,CAAC,CACzD,EAAK,YAAY,CAAC,MAAO,GAazB,IAAM,EAAU,EAAQ,SAAS,CAAG,iBAAmB,mBAEvD,EAAK,YAAY,CAAC,MAAO,GAGrB,EAAK,SAAS,CAAC,QAAQ,CAAC,WAC1B,EAAK,SAAS,CAAC,MAAM,CAAC,SAE1B,EAEM,EAAa,MAAM,IACvB,IAAM,EAAc,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,GAC5B,EAAU,MAAM,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAY,GAAG,EAEhD,MAAO,CAAE,YAAA,EAAa,QAAA,CAAQ,CAChC,EAEA,EAAS,gBAAgB,CAAC,SAAU,AAAA,IAClC,EAAE,cAAc,GAGhB,IAAM,EAAO,EAAS,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,GACnD,EAAS,KAAK,GAGd,EAAW,GACR,IAAI,CAAC,AAAA,GAAQ,EAAS,IACtB,KAAK,CAAC,AAAA,GAAO,QAAQ,GAAG,CAAC,GAC9B","sources":["<anon>","src/index.js"],"sourcesContent":["\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebbde\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebbde\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gfxvS = parcelRequire(\"gfxvS\");\nconst $1f0dc3b9307be026$var$cityForm = document.querySelector(\"form\");\nconst $1f0dc3b9307be026$var$card = document.querySelector(\".card\");\nconst $1f0dc3b9307be026$var$details = document.querySelector(\".details\");\nconst $1f0dc3b9307be026$var$time = document.querySelector(\"img.time\");\nconst $1f0dc3b9307be026$var$icon = document.querySelector(\".icon img\");\nconst $1f0dc3b9307be026$var$updateUI = (data)=>{\n    //! destructure properties:\n    const { cityDetails: cityDetails, weather: weather } = data;\n    console.log(data);\n    //! update details template:\n    $1f0dc3b9307be026$var$details.innerHTML = `\n  <h5 class=\"my-3\">${cityDetails.LocalizedName}</h5>\n  <h6>${cityDetails.AdministrativeArea.LocalizedName}</h6>\n  <div class=\"my-3\">${weather.WeatherText}</div>\n  <div class=\"display-4 my-4\">\n    <span>${weather.Temperature.Metric.Value}</span>\n    <span>&deg;C</span>\n  </div>\n  `;\n    //! update the night/day & icon images:\n    const iconSrc = `images/icons/${weather.WeatherIcon}.svg`;\n    $1f0dc3b9307be026$var$icon.setAttribute(\"src\", iconSrc);\n    // let timeSrc = null;\n    // if (weather.IsDayTime) {\n    //   timeSrc = 'images/day.svg';\n    // } else {\n    //   timeSrc = 'images/night.svg';\n    // }\n    //* Ternary Operator:\n    //* const result = condition ? \"value 1\" : \"value 2\";\n    const timeSrc = weather.IsDayTime ? \"images/day.svg\" : \"images/night.svg\";\n    $1f0dc3b9307be026$var$time.setAttribute(\"src\", timeSrc);\n    //! remove the d-none class if present:\n    if ($1f0dc3b9307be026$var$card.classList.contains(\"d-none\")) $1f0dc3b9307be026$var$card.classList.remove(\"d-none\");\n};\nconst $1f0dc3b9307be026$var$updateCity = async (city)=>{\n    const cityDetails = await (0, $gfxvS.getCity)(city);\n    const weather = await (0, $gfxvS.getWeather)(cityDetails.Key);\n    return {\n        cityDetails: cityDetails,\n        weather: weather\n    };\n};\n$1f0dc3b9307be026$var$cityForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    //!   get city value:\n    const city = $1f0dc3b9307be026$var$cityForm.elements.cityInput.value.trim();\n    $1f0dc3b9307be026$var$cityForm.reset();\n    //!   update the UI with the new city:\n    $1f0dc3b9307be026$var$updateCity(city).then((data)=>$1f0dc3b9307be026$var$updateUI(data)).catch((err)=>console.log(err));\n});\n\n\n//# sourceMappingURL=index.5efa0205.js.map\n","import { getCity, getWeather } from './forecast.js';\n\nconst cityForm = document.querySelector('form');\nconst card = document.querySelector('.card');\nconst details = document.querySelector('.details');\nconst time = document.querySelector('img.time');\nconst icon = document.querySelector('.icon img');\n\nconst updateUI = data => {\n  //! destructure properties:\n  const { cityDetails, weather } = data;\n  console.log(data);\n\n  //! update details template:\n  details.innerHTML = `\n  <h5 class=\"my-3\">${cityDetails.LocalizedName}</h5>\n  <h6>${cityDetails.AdministrativeArea.LocalizedName}</h6>\n  <div class=\"my-3\">${weather.WeatherText}</div>\n  <div class=\"display-4 my-4\">\n    <span>${weather.Temperature.Metric.Value}</span>\n    <span>&deg;C</span>\n  </div>\n  `;\n\n  //! update the night/day & icon images:\n  const iconSrc = `images/icons/${weather.WeatherIcon}.svg`;\n  icon.setAttribute('src', iconSrc);\n\n  // let timeSrc = null;\n\n  // if (weather.IsDayTime) {\n  //   timeSrc = 'images/day.svg';\n  // } else {\n  //   timeSrc = 'images/night.svg';\n  // }\n\n  //* Ternary Operator:\n  //* const result = condition ? \"value 1\" : \"value 2\";\n\n  const timeSrc = weather.IsDayTime ? 'images/day.svg' : 'images/night.svg';\n\n  time.setAttribute('src', timeSrc);\n\n  //! remove the d-none class if present:\n  if (card.classList.contains('d-none')) {\n    card.classList.remove('d-none');\n  }\n};\n\nconst updateCity = async city => {\n  const cityDetails = await getCity(city);\n  const weather = await getWeather(cityDetails.Key);\n\n  return { cityDetails, weather };\n};\n\ncityForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  //!   get city value:\n  const city = cityForm.elements.cityInput.value.trim();\n  cityForm.reset();\n\n  //!   update the UI with the new city:\n  updateCity(city)\n    .then(data => updateUI(data))\n    .catch(err => console.log(err));\n});\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gfxvS","$1f0dc3b9307be026$var$cityForm","document","querySelector","$1f0dc3b9307be026$var$card","$1f0dc3b9307be026$var$details","$1f0dc3b9307be026$var$time","$1f0dc3b9307be026$var$icon","$1f0dc3b9307be026$var$updateUI","data","cityDetails","weather","console","log","innerHTML","LocalizedName","AdministrativeArea","WeatherText","Temperature","Metric","Value","iconSrc","WeatherIcon","setAttribute","timeSrc","IsDayTime","classList","contains","remove","$1f0dc3b9307be026$var$updateCity","city","getCity","getWeather","Key","addEventListener","e","preventDefault","elements","cityInput","value","trim","reset","then","catch"],"version":3,"file":"index.5efa0205.js.map"}