{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,0BAEMC,EAAWC,SAASC,cAAc,QAElCC,G,EAAaC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IACjBC,EACAC,E,mFADoB,EAAAC,EAAAC,SAAQJ,G,cAA5BC,EAAWI,EAAAC,K,UACK,EAAAH,EAAAI,YAAWN,EAAYO,K,cAAvCN,EAAOG,EAAAC,K,kBAGN,CAAEL,cAAaC,Y,oDALCF,G,iCAQzBR,EAASiB,iBAAiB,UAAU,SAAAC,GAClCA,EAAEC,iBAGF,IAAMX,EAAOR,EAASoB,SAASC,UAAUC,MAAMC,OAC/CvB,EAASwB,QAGTrB,EAAWK,GACRiB,MAAK,SAAAC,G,OAAQC,QAAQC,IAAIF,E,IACzBG,OAAM,SAAAC,G,OAAOH,QAAQC,IAAIE,E","sources":["src/scripts/app.js"],"sourcesContent":["import { getCity, getWeather } from './forecast.js';\n\nconst cityForm = document.querySelector('form');\n\nconst updateCity = async city => {\n  const cityDetails = await getCity(city);\n  const weather = await getWeather(cityDetails.Key);\n\n  //TODO   Object Shorthand Notation:\n  return { cityDetails, weather };\n};\n\ncityForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  //   get city value:\n  const city = cityForm.elements.cityInput.value.trim();\n  cityForm.reset();\n\n  //   update the ui with the new city:\n  updateCity(city)\n    .then(data => console.log(data))\n    .catch(err => console.log(err));\n});\n"],"names":["$bpxeT","parcelRequire","$0680554f6bbebb99$var$cityForm","document","querySelector","$0680554f6bbebb99$var$updateCity","$parcel$interopDefault","$2TvXO","mark","_callee","city","cityDetails","weather","$1OpUa","getCity","_ctx","sent","getWeather","Key","addEventListener","e","preventDefault","elements","cityInput","value","trim","reset","then","data","console","log","catch","err"],"version":3,"file":"index.f7020f87.js.map"}