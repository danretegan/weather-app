{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,QAClCC,EAAOF,SAASC,cAAc,SAC9BE,EAAUH,SAASC,cAAc,YACjCG,EAAOJ,SAASC,cAAc,YAC9BI,EAAOL,SAASC,cAAc,aAwCpCF,EAASO,iBAAiB,UAAUC,IAClCA,EAAEC,iBAGF,MAAMC,EAAOV,EAASW,SAASC,UAAUC,MAAMC,OAC/Cd,EAASe,QAZQC,OAAMN,IACvB,MAAMO,QAAoB,EAAAnB,EAAAoB,SAAQR,GAGlC,MAAO,C,YAAEO,E,cAFa,EAAAnB,EAAAqB,YAAWF,EAAYG,KAEd,EAW/BC,CAAWX,GACRY,MAAKC,GA/CO,CAAAA,IACf,MAAMN,YAAEA,EAAWO,QAAEA,GAAYD,EACjCE,QAAQC,IAAIH,GAEZnB,EAAQuB,UAAY,wBACDV,EAAYW,6BACzBX,EAAYY,mBAAmBD,2CACjBJ,EAAQM,gEAElBN,EAAQO,YAAYC,OAAOC;;AAMrC,MAAMC,EAAU,kBAAkBV,EAAQW,kBAC1C7B,EAAK8B,aAAa,MAAOF,GAEzB,IAAIG,EAAU,KAEZA,EADEb,EAAQc,UACA,mBAEA,qBAEZjC,EAAK+B,aAAa,MAAOC,GAErBlC,EAAKoC,UAAUC,SAAS,WAC1BrC,EAAKoC,UAAUE,OAAO,SAAS,EAoBjBC,CAASnB,KACtBoB,OAAMC,GAAOnB,QAAQC,IAAIkB,IAAK","sources":["src/index.js"],"sourcesContent":["import { getCity, getWeather } from './forecast.js';\n\nconst cityForm = document.querySelector('form');\nconst card = document.querySelector('.card');\nconst details = document.querySelector('.details');\nconst time = document.querySelector('img.time');\nconst icon = document.querySelector('.icon img');\n\nconst updateUI = data => {\n  const { cityDetails, weather } = data;\n  console.log(data);\n\n  details.innerHTML = `\n  <h5 class=\"my-3\">${cityDetails.LocalizedName}</h5>\n  <h6>${cityDetails.AdministrativeArea.LocalizedName}</h6>\n  <div class=\"my-3\">${weather.WeatherText}</div>\n  <div class=\"display-4 my-4\">\n    <span>${weather.Temperature.Metric.Value}</span>\n    <span>&deg;C</span>\n  </div>\n  `;\n\n  //! update the night/day & icon images:\n  const iconSrc = `./images/icons/${weather.WeatherIcon}.svg`;\n  icon.setAttribute('src', iconSrc);\n\n  let timeSrc = null;\n  if (weather.IsDayTime) {\n    timeSrc = './images/day.svg';\n  } else {\n    timeSrc = './images/night.svg';\n  }\n  time.setAttribute('src', timeSrc);\n\n  if (card.classList.contains('d-none')) {\n    card.classList.remove('d-none');\n  }\n};\n\nconst updateCity = async city => {\n  const cityDetails = await getCity(city);\n  const weather = await getWeather(cityDetails.Key);\n\n  return { cityDetails, weather };\n};\n\ncityForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  //   get city value:\n  const city = cityForm.elements.cityInput.value.trim();\n  cityForm.reset();\n\n  //   update the ui with the new city:\n  updateCity(city)\n    .then(data => updateUI(data))\n    .catch(err => console.log(err));\n});\n"],"names":["$gfxvS","parcelRequire","$1f0dc3b9307be026$var$cityForm","document","querySelector","$1f0dc3b9307be026$var$card","$1f0dc3b9307be026$var$details","$1f0dc3b9307be026$var$time","$1f0dc3b9307be026$var$icon","addEventListener","e","preventDefault","city","elements","cityInput","value","trim","reset","async","cityDetails","getCity","getWeather","Key","$1f0dc3b9307be026$var$updateCity","then","data","weather","console","log","innerHTML","LocalizedName","AdministrativeArea","WeatherText","Temperature","Metric","Value","iconSrc","WeatherIcon","setAttribute","timeSrc","IsDayTime","classList","contains","remove","$1f0dc3b9307be026$var$updateUI","catch","err"],"version":3,"file":"index.b088f46f.js.map"}