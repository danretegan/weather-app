{"mappings":"I,E,E,E,E,E,C,E,E,C,E,O,E,C,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,G,iB,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,ECAO,OAAM,EACX,aAAc,CACZ,IAAI,CAAC,MAAM,CAAG,mCACd,IAAI,CAAC,UAAU,CACb,4DACF,IAAI,CAAC,OAAO,CACV,gEACJ,CACA,MAAM,WAAW,CAAI,CAAE,CACrB,IAAM,EAAc,MAAM,IAAI,CAAC,OAAO,CAAC,GACjC,EAAU,MAAM,IAAI,CAAC,UAAU,CAAC,EAAY,GAAG,EACrD,MAAO,CAAE,YAAA,EAAa,QAAA,CAAQ,CAChC,CACA,MAAM,QAAQ,CAAI,CAAE,CAClB,IAAM,EAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAK,CAAC,CAC1C,EAAW,MAAM,MAAM,IAAI,CAAC,OAAO,CAAG,GAE5C,MAAO,AADM,CAAA,MAAM,EAAS,IAAI,EAAhC,CACW,CAAC,EAAE,AAChB,CACA,MAAM,WAAW,CAAE,CAAE,CACnB,IAAM,EAAQ,CAAC,EAAE,EAAG,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CACrC,EAAW,MAAM,MAAM,IAAI,CAAC,UAAU,CAAG,GAE/C,MAAO,AADM,CAAA,MAAM,EAAS,IAAI,EAAhC,CACW,CAAC,EAAE,AAChB,CACF,C,G,E","sources":["<anon>","src/forecast.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebbde\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebbde\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fC6JI\", function(module, exports) {\n\n$parcel$export(module.exports, \"Forecast\", function () { return $b5dfa14f7e6e8ab4$export$2a571f1eea731c29; });\nclass $b5dfa14f7e6e8ab4$export$2a571f1eea731c29 {\n    constructor(){\n        this.apiKey = \"S7G2LbP0Y0yEFG1MikAzostUxeEZK6Pl\";\n        this.weatherURI = \"https://dataservice.accuweather.com/currentconditions/v1/\";\n        this.cityURI = \"https://dataservice.accuweather.com/locations/v1/cities/search\";\n    }\n    async updateCity(city) {\n        const cityDetails = await this.getCity(city);\n        const weather = await this.getWeather(cityDetails.Key);\n        return {\n            cityDetails: cityDetails,\n            weather: weather\n        };\n    }\n    async getCity(city) {\n        const query = `?apikey=${this.apiKey}&q=${city}`;\n        const response = await fetch(this.cityURI + query);\n        const data = await response.json();\n        return data[0];\n    }\n    async getWeather(id) {\n        const query = `${id}?apikey=${this.apiKey}`;\n        const response = await fetch(this.weatherURI + query);\n        const data = await response.json();\n        return data[0];\n    }\n}\n\n});\n\n\nparcelRequire(\"fC6JI\");\n})();\n//# sourceMappingURL=index.4ad35f0d.js.map\n","export class Forecast {\n  constructor() {\n    this.apiKey = 'S7G2LbP0Y0yEFG1MikAzostUxeEZK6Pl';\n    this.weatherURI =\n      'https://dataservice.accuweather.com/currentconditions/v1/';\n    this.cityURI =\n      'https://dataservice.accuweather.com/locations/v1/cities/search';\n  }\n  async updateCity(city) {\n    const cityDetails = await this.getCity(city);\n    const weather = await this.getWeather(cityDetails.Key);\n    return { cityDetails, weather };\n  }\n  async getCity(city) {\n    const query = `?apikey=${this.apiKey}&q=${city}`;\n    const response = await fetch(this.cityURI + query);\n    const data = await response.json();\n    return data[0];\n  }\n  async getWeather(id) {\n    const query = `${id}?apikey=${this.apiKey}`;\n    const response = await fetch(this.weatherURI + query);\n    const data = await response.json();\n    return data[0];\n  }\n}\n"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","globalThis","self","window","global","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$b5dfa14f7e6e8ab4$export$2a571f1eea731c29","set","s","enumerable","configurable","constructor","apiKey","weatherURI","cityURI","updateCity","city","cityDetails","getCity","weather","getWeather","Key","query","response","fetch","data","json"],"version":3,"file":"index.4ad35f0d.js.map"}