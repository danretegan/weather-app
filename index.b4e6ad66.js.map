{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,0BAEMC,EAAWC,SAASC,cAAc,QAClCC,EAAOF,SAASC,cAAc,SAC9BE,EAAUH,SAASC,cAAc,YACjCG,EAAOJ,SAASC,cAAc,YAC9BI,EAAOL,SAASC,cAAc,aAiC9BK,G,EAAaC,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IACjBC,EACAC,E,mFADoB,EAAAC,EAAAC,SAAQJ,G,cAA5BC,EAAWI,EAAAC,K,UACK,EAAAH,EAAAI,YAAWN,EAAYO,K,cAAvCN,EAAOG,EAAAC,K,kBAEN,CAAEL,cAAaC,Y,oDAJCF,G,iCAOzBZ,EAASqB,iBAAiB,UAAU,SAAAC,GAClCA,EAAEC,iBAGF,IAAMX,EAAOZ,EAASwB,SAASC,UAAUC,MAAMC,OAC/C3B,EAAS4B,QAGTrB,EAAWK,GACRiB,MAAK,SAAAC,G,OA/CO,SAAAA,GACf,IAAQjB,EAAyBiB,EAAzBjB,YAAaC,EAAYgB,EAAZhB,QACrBiB,QAAQC,IAAIF,GAEZ1B,EAAQ6B,UAAY,wBAEdC,OADarB,EAAYsB,cAAc,iBAEzBD,OADdrB,EAAYuB,mBAAmBD,cAAc,+BAGzCD,OAFUpB,EAAQuB,YAAY,sDAEGH,OAAjCpB,EAAQwB,YAAYC,OAAOC,MAAM;;AAM3C,IAAMC,EAAU,kBAAsCP,OAApBpB,EAAQ4B,YAAY,QACtDpC,EAAKqC,aAAa,MAAOF,GAEzB,IAAIG,EAAU,KAEZA,EADE9B,EAAQ+B,UACA,mBAEA,qBAEZxC,EAAKsC,aAAa,MAAOC,GAErBzC,EAAK2C,UAAUC,SAAS,WAC1B5C,EAAK2C,UAAUE,OAAO,S,CAoBRC,CAASnB,E,IACtBoB,OAAM,SAAAC,G,OAAOpB,QAAQC,IAAImB,E","sources":["src/index.js"],"sourcesContent":["import { getCity, getWeather } from './forecast.js';\n\nconst cityForm = document.querySelector('form');\nconst card = document.querySelector('.card');\nconst details = document.querySelector('.details');\nconst time = document.querySelector('img.time');\nconst icon = document.querySelector('.icon img');\n\nconst updateUI = data => {\n  const { cityDetails, weather } = data;\n  console.log(data);\n\n  details.innerHTML = `\n  <h5 class=\"my-3\">${cityDetails.LocalizedName}</h5>\n  <h6>${cityDetails.AdministrativeArea.LocalizedName}</h6>\n  <div class=\"my-3\">${weather.WeatherText}</div>\n  <div class=\"display-4 my-4\">\n    <span>${weather.Temperature.Metric.Value}</span>\n    <span>&deg;C</span>\n  </div>\n  `;\n\n  //! update the night/day & icon images:\n  const iconSrc = `./images/icons/${weather.WeatherIcon}.svg`;\n  icon.setAttribute('src', iconSrc);\n\n  let timeSrc = null;\n  if (weather.IsDayTime) {\n    timeSrc = './images/day.svg';\n  } else {\n    timeSrc = './images/night.svg';\n  }\n  time.setAttribute('src', timeSrc);\n\n  if (card.classList.contains('d-none')) {\n    card.classList.remove('d-none');\n  }\n};\n\nconst updateCity = async city => {\n  const cityDetails = await getCity(city);\n  const weather = await getWeather(cityDetails.Key);\n\n  return { cityDetails, weather };\n};\n\ncityForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  //   get city value:\n  const city = cityForm.elements.cityInput.value.trim();\n  cityForm.reset();\n\n  //   update the ui with the new city:\n  updateCity(city)\n    .then(data => updateUI(data))\n    .catch(err => console.log(err));\n});\n"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$cityForm","document","querySelector","$b8f9b7833fa37166$var$card","$b8f9b7833fa37166$var$details","$b8f9b7833fa37166$var$time","$b8f9b7833fa37166$var$icon","$b8f9b7833fa37166$var$updateCity","$parcel$interopDefault","$2TvXO","mark","_callee","city","cityDetails","weather","$fC6JI","getCity","_ctx","sent","getWeather","Key","addEventListener","e","preventDefault","elements","cityInput","value","trim","reset","then","data","console","log","innerHTML","concat","LocalizedName","AdministrativeArea","WeatherText","Temperature","Metric","Value","iconSrc","WeatherIcon","setAttribute","timeSrc","IsDayTime","classList","contains","remove","$b8f9b7833fa37166$var$updateUI","catch","err"],"version":3,"file":"index.b4e6ad66.js.map"}